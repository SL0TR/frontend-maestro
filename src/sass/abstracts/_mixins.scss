@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// MEDIA QUERY MANAGER
/*

0 - 600px: PHONE
600 - 900px: TABLET Potrait
900 - 1200px: TABLET Landscape
1200 - 1800px: NORMAL SCREEN Desktop
1800px+: Big Desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components


1em = 16px (browser default font size)
*/

@mixin respond($breakpoint) {
  @if ($breakpoint == phone) {
    @media (max-width: 37.5em) {    //600px
      @content
    };
  }
  @if ($breakpoint == tab-port) {
    @media (max-width: 56.25em) {   //900px
      @content
    };
  }

  @if ($breakpoint == tab-land) {
    @media (max-width: 75em) {     //1200px
      @content 
    };
  }

  @if ($breakpoint == desktop) {
    @media (max-width: 87.5em) {   //1800px
      @content
    };
  }

  @if ($breakpoint == big-desktop) {
    @media (min-width: 112.5em) {   //1800px
      @content
    };
  }
}

//Mixin for generating class name for 5 columns
$columns: 5;

@mixin col-x {
  @for $i from 1 through $columns {
    .col-#{$i} { @content }
  }
}


@mixin black-bar( $width: 50%, $top: initial, $right: initial, $left: initial, $center: initial) {

  .black-bar {

    @if($center == 'center') {
      $center: translateY(-50%);
    }
      position: absolute;
      height: 9px;
      content: "";
      right: $right;
      left: $left;
      width: $width;
      background-color: $primary-color;
      top: $top;
      transform: $center;
  }

}

@mixin black-bar-2( $width: 50%, $top: initial, $right: initial, $left: initial, $center: initial) {

  .black-bar-2 {

    @if($center == 'center') {
      $center: translateY(-50%);
    }
      position: absolute;
      height: 10px;
      content: "";
      right: $right;
      left: $left;
      width: $width;
      background-color: $primary-color;
      top: $top;
      transform: $center;
  }

}
.relative {
  position: relative;
}